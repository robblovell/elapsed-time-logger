{"version":3,"file":"elapsed-time-logger.js","sources":["../src/index.ts"],"sourcesContent":["import hrtime from 'browser-hrtime';\ninterface IElapsedLogger {\n  end(label?: string): void;\n  get(): string;\n  _diff(): HrTime;\n  parse(hrtime: HrTime): string;\n}\ntype HrTime = [number, number];\nclass ElapsedLogger implements IElapsedLogger {\n  private _timer: HrTime;\n  constructor() {\n    this._timer = hrtime();\n  }\n\n  end(label: string = '') {\n    const elapsedTime = this.get();\n    console.log(`${label ? label + ' ' : ''}${elapsedTime}`);\n  }\n\n  _diff(): HrTime {\n    return hrtime(this._timer);\n  }\n\n  get(): string {\n    const diff = this._diff();\n    return this.parse(diff);\n  }\n\n  getValue(unit: \"ns\" | \"ms\" | \"sec\" | \"min\" | \"hr\"): number {\n    switch(unit) {\n      case \"ns\":\n        return this._getNS();\n      case \"ms\":\n        return this._getMS();\n      case \"sec\":\n        return this._getSeconds();\n      case \"min\":\n        return this._getMinutes();\n      case \"hr\":\n        return this._getHours();\n    }\n  }\n\n  _getRawValue(hrtime?: HrTime): number {\n    if (!hrtime)\n      hrtime = this._diff();\n    return (hrtime[0] * 1e9 + hrtime[1]) / 1e6\n  }\n\n  _getNS(sourceMS?: number): number {\n    if (!sourceMS) {\n      sourceMS = this._getRawValue()\n    }\n    return sourceMS\n  }\n\n  _getMS(sourceMS?: number): number {\n    if (!sourceMS) {\n      sourceMS = this._getRawValue()\n    }\n    return Math.round(sourceMS % 1000)\n  }\n\n  _getSeconds(sourceMS?: number): number {\n    if (!sourceMS) {\n      sourceMS = this._getRawValue()\n    }\n    return Math.round((((sourceMS / 1000) % 60) + Number.EPSILON) * 100) / 100\n  }\n\n  _getMinutes(sourceMS?: number): number {\n    if (!sourceMS) {\n      sourceMS = this._getRawValue()\n    }\n    return Math.floor((sourceMS / (1000 * 60)) % 60);\n  }\n\n  _getHours(sourceMS?: number): number {\n    if (!sourceMS) {\n      sourceMS = this._getRawValue()\n    }\n    return Math.floor((sourceMS / (1000 * 60 * 60)) % 24)\n  }\n\n  parse(hrtime: HrTime): string {\n    let result = '';\n    const sourceMS: number = this._getRawValue(hrtime);\n    const ms: number = this._getMS(sourceMS);\n    const sec: number = this._getSeconds(sourceMS);\n    const mins: number = this._getMinutes(sourceMS);\n    const hrs: number = this._getHours(sourceMS);\n\n    if (hrs > 0) {\n      result += hrs + ' hours ';\n    }\n    if (mins > 0) {\n      result += mins + ' minutes ';\n    }\n    if (sec >= 1) {\n      result += sec + ' seconds ';\n    }\n    if (mins === 0 && hrs === 0 && sec < 1 && ms > 0) {\n      result += ms + 'ms';\n    }\n\n    return result;\n  }\n}\n\nconst _timers = new Map<string, IElapsedLogger>();\n\nconst start = (label: string | null = null): IElapsedLogger => {\n  const elapsed = new ElapsedLogger();\n  if (!label) {\n    return elapsed;\n  }\n  _timers.set(label, elapsed);\n  return elapsed;\n};\n\nconst end = (label: string, overrideLabel: string | null = null): void => {\n  const elapsedTime = get(label);\n  if (elapsedTime === false) {\n    return;\n  }\n  console.log(`${overrideLabel || label} ${elapsedTime}`);\n  _timers.delete(label);\n};\n\nconst get = (label: string): string | boolean => {\n  const timer = _timers.get(label);\n  if (!timer) {\n    console.warn(`No such label '${label}' for ElapsedLogger`); // process.emitWarning\n    return false;\n  }\n  return timer.get();\n};\nexport default {\n  get,\n  end,\n  start,\n};\n"],"names":["this","_timer","hrtime","ElapsedLogger","label","elapsedTime","get","console","log","diff","_diff","parse","unit","_getNS","_getMS","_getSeconds","_getMinutes","_getHours","sourceMS","_getRawValue","Math","round","Number","EPSILON","floor","result","ms","sec","mins","hrs","_timers","Map","timer","warn","end","overrideLabel","delete","start","elapsed","set"],"mappings":"4XAUE,aACEA,KAAKC,OAASC,YAgGlB,OA7FEC,gBAAA,SAAIC,gBAAAA,MACF,IAAMC,EAAcL,KAAKM,MACzBC,QAAQC,KAAOJ,EAAQA,EAAQ,IAAM,IAAKC,IAG5CF,kBAAA,WACE,OAAOD,UAAOF,KAAKC,SAGrBE,gBAAA,WACE,IAAMM,EAAOT,KAAKU,QAClB,OAAOV,KAAKW,MAAMF,IAGpBN,qBAAA,SAASS,GACP,OAAOA,GACL,IAAK,KACH,OAAOZ,KAAKa,SACd,IAAK,KACH,OAAOb,KAAKc,SACd,IAAK,MACH,OAAOd,KAAKe,cACd,IAAK,MACH,OAAOf,KAAKgB,cACd,IAAK,KACH,OAAOhB,KAAKiB,cAIlBd,yBAAA,SAAaD,GAGX,OAFKA,IACHA,EAASF,KAAKU,UACI,IAAZR,EAAO,GAAWA,EAAO,IAAM,KAGzCC,mBAAA,SAAOe,GAIL,OAHKA,IACHA,EAAWlB,KAAKmB,gBAEXD,GAGTf,mBAAA,SAAOe,GAIL,OAHKA,IACHA,EAAWlB,KAAKmB,gBAEXC,KAAKC,MAAMH,EAAW,MAG/Bf,wBAAA,SAAYe,GAIV,OAHKA,IACHA,EAAWlB,KAAKmB,gBAEXC,KAAKC,MAAoD,KAA3CH,EAAW,IAAQ,GAAMI,OAAOC,UAAkB,KAGzEpB,wBAAA,SAAYe,GAIV,OAHKA,IACHA,EAAWlB,KAAKmB,gBAEXC,KAAKI,MAAON,MAA0B,KAG/Cf,sBAAA,SAAUe,GAIR,OAHKA,IACHA,EAAWlB,KAAKmB,gBAEXC,KAAKI,MAAON,OAA+B,KAGpDf,kBAAA,SAAMD,GACJ,IAAIuB,EAAS,GACPP,EAAmBlB,KAAKmB,aAAajB,GACrCwB,EAAa1B,KAAKc,OAAOI,GACzBS,EAAc3B,KAAKe,YAAYG,GAC/BU,EAAe5B,KAAKgB,YAAYE,GAChCW,EAAc7B,KAAKiB,UAAUC,GAenC,OAbIW,EAAM,IACRJ,GAAUI,EAAM,WAEdD,EAAO,IACTH,GAAUG,EAAO,aAEfD,GAAO,IACTF,GAAUE,EAAM,aAEL,IAATC,GAAsB,IAARC,GAAaF,EAAM,GAAKD,EAAK,IAC7CD,GAAUC,EAAK,MAGVD,QAILK,EAAU,IAAIC,IAoBdzB,EAAM,SAACF,GACX,IAAM4B,EAAQF,EAAQxB,IAAIF,GAC1B,OAAK4B,EAIEA,EAAM1B,OAHXC,QAAQ0B,KAAK,kBAAkB7B,0BACxB,UAII,CACbE,MACA4B,IAnBU,SAAC9B,EAAe+B,gBAAAA,QAC1B,IAAM9B,EAAcC,EAAIF,IACJ,IAAhBC,IAGJE,QAAQC,KAAO2B,GAAiB/B,OAASC,GACzCyB,EAAQM,OAAOhC,KAcfiC,MA7BY,SAACjC,gBAAAA,QACb,IAAMkC,EAAU,IAAInC,EACpB,OAAKC,GAGL0B,EAAQS,IAAInC,EAAOkC,GACZA,GAHEA"}